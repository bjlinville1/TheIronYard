<h1>Patient records</h1>
<!-- I want to put an A-Z and a search bar across the top -->
  <p><%= link_to 'Enter a new patient', new_hospital_patient_path(@hospital) %>
    <br>
  </p> 

<% total_patients = 0 %>

<!-- HIdden field. Will hold params[:hospital_id] as the value -->

<%= hidden_field_tag "", params[:id], class: 'hospital_id' %>
<%= text_field_tag '', '', class: "patient_search" %>
<%= link_to "Search patients", 'javascript:void(0);', class: "search_patients btn btn-md btn-primary" %>
<ul class="search_list"></ul>


<div class="col-lg-10 col-lg-offset-1">
  <table id="patients_table" class="tablesorter table-striped"> 
    <thead>
      <th>ID</th>
      <th>Name</th>
      <th>Malady</th>
      <th>Gender</th>
      <th>Status</th> 
    </thead> 
    <tbody>
    <% Patient.all.each_slice(5) do |y| %>       
    <% total_patients += 1 %>
      <% y.each do |z| %>
        <tr class="<%= 'hidden' if total_patients >= 2 %> slice_<%= total_patients %> the_patient">
          <td><%= z.id %></td>
          <td><%= link_to z.full_name, hospital_patient_path(@hospital, z) %></td>
          <td><%= z.malady %></td>
          <td><%= z.gender %></td>
          <td><%= z.workflow_state %></td>
        </tr>    
      <% end %>
    <% end %>  
    </tbody> 
  </table>          

<% total_patients.times do |q| %>
<%= link_to q + 1, "javascript:void(0);", class: "next_page" %>
<% end %>


<%= link_to "Back", hospitals_path(@hospital) %>
</ul>
  <br>

      <!-- workflow seems like a crappy way of branching logic. its not scalable because it doesn't mathematically define the relationships between states. You have to write gobs of logic. Instead, you could write a .each that corresponds to variables assigned to the ranges of allowable flows from one state to another, and pull your desired links out of an array when they match your criteria. This means you would write ONE loop, and then only have to input transitions into variable arrays that represent each state.(which would be very easy to copy and/or fill in ranges from one variable array to the next) 

    ...this is probably already built somewhere, just like the scaffold.
  -->
